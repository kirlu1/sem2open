Sjakkoppgave - Ulrik Nedregotten Hansen

Innkapslingen av koden er veldig dårlig. Jeg hadde ikke jobbet med JLabels før, og i hodet mitt var de knappene som skulle brukes til å
styre spillet. Derfor er de i Controlleren, og det er litt utydelige grenser mellom Controller og View. Jeg er ennå usikker på hva som
er en god måte å skille View og Controller når man bruker JLabels på denne måten.

Jeg lagde Direction.java og metodene i Grid som bruker den etter jeg hadde skrevet alle reglene for hvordan brikker beveger seg. 
De hadde spart meg for mye innsats med å skrive loops som itererer over retninger i griden.

Når jeg skulle lage metoder for å sjekke om et trekk ville sette deg selv i sjakk begynte jeg med å lage en kopi av brettet, 
gjøre trekket på kopien, og se om kongen er i sjakk.
Jeg syntes det var unødvendig stor bruk av minne, og valgte å heller lage defendingFrom() som sjekker om brikken du flytter blokkerer en 
BISHOP/ROOK/QUEEN for kongen, da de er de eneste tilfellene hvor å flytte en brikke som ikke er kongen selv kan sjakke deg selv.

Det ble veldig komplisert å dekke alle cases for hva som er lov når man er sjakket, i og med at det er mulig å være sjakket av f.eks.
en BISHOP og en ROOK på samme tid, og i dette tilfelle kan man ikke kapre den truende brikken, kongen må flyttes.